use strict;
#------------------------------------------------------------------------------
# セッションファイル管理用モジュール
#						(C)2013 nabe / nabe@abk.nu
#------------------------------------------------------------------------------
package Satsuki::Base::SessionFile;
our $VERSION = '1.10';
#------------------------------------------------------------------------------
use Fcntl;	# for sysopen
###############################################################################
# ■基本処理
###############################################################################
#------------------------------------------------------------------------------
# ●【コンストラクタ】
#------------------------------------------------------------------------------
sub new {
	my $self = bless({}, shift);
	my $ROBJ = $self->{ROBJ} = shift;
	$self->{sid_base}   = shift or die "Invalid sid";
	$self->{sid_number} = int(shift) || 0;
	return $self;
}

#------------------------------------------------------------------------------
# ●デストラクタ
#------------------------------------------------------------------------------
sub DESTROY {
	my $self = shift;
	$self->close();
}

###############################################################################
# ■メインルーチン
###############################################################################
#------------------------------------------------------------------------------
# ●sessionファイルの初期化
#------------------------------------------------------------------------------
sub init {
	my $self = shift;
	my $ROBJ = $self->{ROBJ};

	my ($fh, $i);
	for($i=1; $i<10000; $i++) {
		my $file = $self->get_filename($i);
		sysopen($fh, $file, O_CREAT | O_WRONLY | O_EXCL) or next;
		close($fh);
		last;
	}
	if ($i>=10000) { return; }
	return $i;	# 成功
}

#------------------------------------------------------------------------------
# ●sessionファイル名の生成
#------------------------------------------------------------------------------
sub get_filename {
	my $self = shift;
	my $num  = shift || $self->{sid_number};
	my $ROBJ = $self->{ROBJ};

	my $sid = $self->{sid_base};
	if ($sid eq '') { return; }
	$sid =~ s/\W/_/g;

	my $dir = $ROBJ->get_tmpdir();
	return "$dir$sid-$num.session";
}

#------------------------------------------------------------------------------
# ●sessionファイルのオープン
#------------------------------------------------------------------------------
sub open {
	my $self = shift;
	my $file = $self->get_filename() || return;
	my $fh;
	sysopen($fh, $file, O_CREAT | O_WRONLY | O_TRUNC);
	$self->{fh} = $fh;
	return $fh;
}

#------------------------------------------------------------------------------
# ●sessionファイルへの書き込み
#------------------------------------------------------------------------------
sub msg {
	my $self = shift;
	my $ROBJ = $self->{ROBJ};
	my $msg  = $ROBJ->message_translate(@_);
	return $self->say($msg);
}
sub write {
	my $self = shift;
	my $fh   = $self->{fh} || return;
	print $fh @_;
}
sub say {
	my $self = shift;
	my $fh   = $self->{fh} || return;
	print $fh @_,"\n";
}

#------------------------------------------------------------------------------
# ●書き込みフラッシュ
#------------------------------------------------------------------------------
sub flush {
	my $self = shift;
	my $fh = $self->{fh} || return;

	my $old = select($fh);
	$|=1; $|=0;
	select($old);
}

sub autoflush {
	my $self = shift;
	my $flag = shift;
	my $fh = $self->{fh} || return;

	my $old = select($fh);
	$| = ($flag eq '') ? 1 : $flag;
	select($old);
}

#------------------------------------------------------------------------------
# ●ファイルクローズ
#------------------------------------------------------------------------------
sub close {
	my $self = shift;
	my $fh = $self->{fh} || return;
	close($fh);
}

#------------------------------------------------------------------------------
# ●sessionファイルの読み込み
#------------------------------------------------------------------------------
sub load {
	my $self = shift;
	my $file = $self->get_filename() || return;
	my $ROBJ = $self->{ROBJ};
	return $ROBJ->fread_lines($file, {NoError => 1});
}

